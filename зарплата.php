<?php
/***********************************************************
 * Расчет зарплаты менеджеров
 * Заказ считается закрытым, если ПОЛНОСТЬЮ отгружен и оплачен.
 * Для расчета в конкретном месяце берутся заказы:
 * ОПЛАЧЕННЫЕ в этом месяце, если отгружены ранее, 
 * и
 * ОТГРУЖЕННЫЕ в этом месяце, если оплачены ранее
 * 
 * Пример: 
 * заказ создан 01.01.2018, 
 * оплачен 1/2 часть 02.02.2018,
 * отгружен 1/2 часть 03.03.2018
 * отгружен 1/2 часть 07.03.2018
 * оплачен 1/2 часть 04.04.2018
 * Заказ засчитан в зарплату за 04 месяц.
 * 
 * Платежи: могут быть наличные и безналичные.
 * В одном платеже может быть сразу несколько заказов, 
 * как частично так и полностью оплаченных.
 * Отгрузки аналогично платежам.
 * 
 * Документы платежей: Document_ПоступлениеБезналичныхДенежныхСредств,
 *                     Document_ПриходныйКассовыйОрдер
 * Документы отгрузок: Document_РеализацияТоваровУслуг
 * 
 **********************************************************/
$installpath = '/home/user/proj/03-1c-report';
require $installpath.'/vendor/autoload.php';

use GuzzleHttp\Client;
use GuzzleHttp\Psr7\Request;

include_once $installpath.'/php/00-conf.php';
include_once $installpath.'/php/50-functions.php';
include_once $installpath.'/php/98-class.php';

//***************************************************************************
// mongo connect
$mongo = new MongoDB\Client("mongodb://$mongo_user:$mongo_pass@$mongo_serv");
// 1c connect
$client = new Client([
	'base_uri' => "$server1c/$base1c/odata/standard.odata/",
	'timeout'  => 600.0,
]);
//***************************************************************************

//источник клиента
$КаналыРекламныхВоздействий = getMongoData($mongo,'ut','ChartOfCharacteristicTypes_КаналыРекламныхВоздействий','Ref_Key','Description');
//источник клиента
$КаналПервичногоИнтереса = getMongoData($mongo,'ut','InformationRegister_ИсточникиПервичногоИнтереса','Партнер_Key','КаналПервичногоИнтереса_Key');
//менеджеры
$Менеджеры = getMongoData($mongo,'ut','Catalog_Пользователи','Ref_Key','Description');
//контрагенты
$Контрагенты = getMongoData($mongo,'ut','Catalog_Контрагенты','Ref_Key','Description');
//контрагенты партнер_кей
$Контрагенты_партнеры = getMongoData($mongo,'ut','Catalog_Контрагенты','Ref_Key','Партнер_Key');
//Организации
$Организации = getMongoData($mongo,'ut','Catalog_Организации','Ref_Key','Description');
//Партнеры
$raw = get1cData($client,$userName, $userAccessKey,'Catalog_Партнеры',
			'Ref_Key,Description,ОсновнойМенеджер_Key',
			''
			);
foreach($raw as $tmp) {
	$Партнеры[$tmp['Ref_Key']]['Description'] = $tmp['Description'];
	$Партнеры[$tmp['Ref_Key']]['ОсновнойМенеджер_Key'] = $tmp['ОсновнойМенеджер_Key'];
}
//прием начальной и конечной даты
// при вызове из консоли
if (php_sapi_name() == "cli") {
	$startdate = @$argv[1];
	$stopdate = @$argv[2];
}
else { // при вызове через GET/POST запрос
	$startdate = @$_REQUEST['startdate'];
	$stopdate = @$_REQUEST['stopdate'];
}
// если даты не заданы, то берем начало текущего месяца и текущую дату
if ((!isset($startdate)) or ($startdate == '')) {
    $startdate = date('d.m.Y',mktime(0, 0, 0, date("m"), date("1"), date("Y")));
}

if ((!isset($stopdate)) or ($stopdate == '')) {
    $stopdate = date('d.m.Y',mktime(23, 59, 59, date("m"), date("d"), date("Y")));
}

$time1 = strtotime($startdate.' 00:00:00');
$time2 = strtotime($stopdate.' 23:59:59')+1;

$Заказы = array(); // массив для сбора инфы по заказам
//******************************************************************************
// заполняем данные по реализациям: даты, суммы.
$raw = get1cData($client,$userName, $userAccessKey,'Document_РеализацияТоваровУслуг',
            'ЗаказКлиента,Date,СуммаДокумента',
            'ЗаказКлиента_Type eq \'StandardODATA.Document_ЗаказКлиента\''
				);
                
foreach ($raw as $Реализация) {
    if ($Реализация['ЗаказКлиента'] == '00000000-0000-0000-0000-000000000000') { continue; }
    
    $Заказ_Key = trim($Реализация['ЗаказКлиента']);
    
    if (!array_key_exists($Заказ_Key,$Заказы)) { 
        $Заказы[$Заказ_Key] = new order();
    }
    
    $Заказы[$Заказ_Key]->newDoc('Реализация',$Реализация['Date'], $Реализация['СуммаДокумента']);
}

//******************************************************************************
// заполняем данные по безналичным платежам: даты, суммы.
// если у заказа нет реализации, то пропускаем.
$raw = get1cData($client,$userName, $userAccessKey,'Document_ПоступлениеБезналичныхДенежныхСредств',
            'РасшифровкаПлатежа,Date',
                    ''
				);
foreach ($raw as $Платежка) {
    foreach ($Платежка['РасшифровкаПлатежа'] as $РасшифровкаПлатежа) {
        if ($РасшифровкаПлатежа['Заказ_Type'] != 'StandardODATA.Document_ЗаказКлиента') { continue; }
        if ($РасшифровкаПлатежа['Заказ'] == '00000000-0000-0000-0000-000000000000') { continue; }

        $Заказ_Key = trim($РасшифровкаПлатежа['Заказ']);
        
        if (!array_key_exists($Заказ_Key,$Заказы)) { continue; }
        
        $Заказы[$Заказ_Key]->newDoc('Платежка',$Платежка['Date'], $РасшифровкаПлатежа['Сумма']);
    }
}

//******************************************************************************
// заполняем данные по наличным платежам: даты, суммы.
// если у заказа нет реализации, то пропускаем.
$raw = get1cData($client,$userName, $userAccessKey,'Document_ПриходныйКассовыйОрдер',
			'РасшифровкаПлатежа,Date',
			''
				);
foreach ($raw as $КассовыйЧек) {
    foreach ($КассовыйЧек['РасшифровкаПлатежа'] as $РасшифровкаПлатежа) {
        if ($РасшифровкаПлатежа['Заказ_Type'] != 'StandardODATA.Document_ЗаказКлиента') { continue; }
        if ($РасшифровкаПлатежа['Заказ'] == '00000000-0000-0000-0000-000000000000') { continue; }
        
        $Заказ_Key = trim($РасшифровкаПлатежа['Заказ']);
        
        if (!array_key_exists($Заказ_Key,$Заказы)) { continue; }
        
        $Заказы[$Заказ_Key]->newDoc('Чек',$КассовыйЧек['Date'], $РасшифровкаПлатежа['Сумма']);
    }
}

//******************************************************************************
// это типа плата за доставку. клиент отдает курьеру, курьер нам, 
// но доставка типа бесплатна и надо зачесть что-то кудато.
// мутная тема. очень специфично. для широкого применения наверно вообще не нужно
// если у заказа нет реализации, то пропускаем.
$raw = get1cData($client,$userName, $userAccessKey,'Document_ВзаимозачетЗадолженности',
    'ДебиторскаяЗадолженность,Date',
    'КонтрагентКредитор_Type eq \'StandardODATA.Catalog_Контрагенты\''
);
foreach ($raw as $Задолженность) {
    foreach ($Задолженность['ДебиторскаяЗадолженность'] as $ДебиторскаяЗадолженность) {
        if ($ДебиторскаяЗадолженность['Заказ_Type'] != 'StandardODATA.Document_ЗаказКлиента') { continue; }
        if ($ДебиторскаяЗадолженность['Заказ'] == '00000000-0000-0000-0000-000000000000') { continue; }

        $Заказ_Key = trim($ДебиторскаяЗадолженность['Заказ']);

        if (!array_key_exists($Заказ_Key,$Заказы)) { continue; }
        
        $Заказы[$Заказ_Key]->newDoc('Задолженность',$Задолженность['Date'], $ДебиторскаяЗадолженность['Сумма']);
    }
}
//******************************************************************************
// достаем из 1с заказы за последний год. Вообще-то можно и меньше, если точно известно
// что нет заказов старше месяца например.
$begining = date('Y-m-d\TH:i:s',mktime(0, 0, 0, date("m"), date("d"), date("Y")-1)); //год назад полночь сегодня
$tasks = get1cData($client,$userName, $userAccessKey,'Document_ЗаказКлиента',
    'Ref_Key,Number,СуммаДокумента,ДатаОтгрузки,Менеджер_Key,Контрагент_Key,Организация_Key,Партнер_Key,Date',
    'Date gt datetime\''.$begining.'\''
);
//file_put_contents('debug.log',count($tasks).PHP_EOL,FILE_APPEND);
// заполняем основную инфу по заказу.
foreach ($tasks as $single_task) {
    $Заказ_Key = trim($single_task['Ref_Key']);
    if (!array_key_exists($Заказ_Key,$Заказы)) { continue; }
    if (array_key_exists(trim($single_task['Контрагент_Key']),$nouse_Контрагенты)) { continue; }

    $Заказы[$Заказ_Key]->Number = trim($single_task['Number']);
    $Заказы[$Заказ_Key]->СуммаДокумента = trim($single_task['СуммаДокумента']);
    $Заказы[$Заказ_Key]->ДатаЗаказа = strtotime(trim($single_task['Date']));
    
    $managerFIO = explode(' ',ClearString($Менеджеры[$single_task['Менеджер_Key']]));
    if (count($managerFIO)>2) {
        $Заказы[$Заказ_Key]->МенеджерЗаказа = $managerFIO[0].$managerFIO[1][0].$managerFIO[1][1].$managerFIO[2][0].$managerFIO[2][1];
    } else {
        $Заказы[$Заказ_Key]->МенеджерЗаказа = implode(' ',$managerFIO);
    }
    
       // менеджер клиента
    $ОсновнойМенеджер_Key = $Партнеры[$single_task['Партнер_Key']]['ОсновнойМенеджер_Key'];
    $managerFIO = explode(' ',ClearString($Менеджеры[$ОсновнойМенеджер_Key] ?? 'Нет'));
    if (count($managerFIO)>2) {
        $Заказы[$Заказ_Key]->МенеджерКлиента = $managerFIO[0].$managerFIO[1][0].$managerFIO[1][1].$managerFIO[2][0].$managerFIO[2][1];
    } else {
        $Заказы[$Заказ_Key]->МенеджерКлиента = implode(' ',$managerFIO);
    }
    
    $Заказы[$Заказ_Key]->Контрагент = $Контрагенты[$single_task['Контрагент_Key']];
    $Заказы[$Заказ_Key]->Партнер = $Партнеры[$single_task['Партнер_Key']];
    $Заказы[$Заказ_Key]->Организация = $Организации[trim($single_task['Организация_Key'])];
    
    $partner_key = $Контрагенты_партнеры[$single_task['Контрагент_Key']];
    $channel_key = $КаналПервичногоИнтереса[$partner_key] ?? '';
    $Заказы[$Заказ_Key]->КаналПервичногоИнтереса = $КаналыРекламныхВоздействий[$channel_key] ?? 'не указан';
}
//******************************************************************************
// готовим список заказов для вывода на страницу.
// используется бутстрап 4
// также считаем сразу зарплату
$Зарплата = array();
$output = '<th>Номер Заказа</th><th>Дата</th><th>Сумма заказа</th>'.
            '<th style="width:  16%">Клиент</th>'.
            '<th style="width:  16%">Организация</th>'.
            '<th>Реализации</th><th>Оплаты</th><th>Дней прошло</th>'.
            '<th>Менеджер заказа</th><th>Менеджер клиента</th><th>Источник</th>'.PHP_EOL;
$ordercount = 0;

foreach ($Заказы as $Заказ) {
    
    if ( $Заказ->СуммаДокумента == 0 ) { continue; }
    //~ if ( !$Заказ->РеализованПолностью() ) { continue; }
    if ( !$Заказ->ОплаченПолностью() ) { continue; }
    if ( !$Заказ->ЗакрытВЭтотПериод($time1,$time2) ) { continue; }

    $Реализации = $Заказ->Собрать('Реализация');
    $ОплатыБН = $Заказ->Собрать('Платежка');
    $ОплатыНал = $Заказ->Собрать('Чек');
    $взаимозачеты = $Заказ->Собрать('Задолженность');
    
    $output .= '<tr>';
    $output .= '<td>'.$Заказ->Number.'</td>';
    $output .= '<td>'.date('d.m.Y',$Заказ->ДатаЗаказа).'</td>';
    $output .= '<td>'.str_replace('.',',',$Заказ->СуммаДляУчета()).'</td>';
    $output .= '<td>'.$Заказ->Контрагент.'</td>';
    $output .= '<td>'.$Заказ->Организация.'</td>';
    $output .= '<td>'.$Реализации.'</td>';
    $output .= '<td>'.$ОплатыБН.$ОплатыНал.$взаимозачеты.'</td>';
    $deltatime = round(($Заказ->ПоследняяДата - $Заказ->ДатаЗаказа)/60/60/24);
    $output .= '<td>'.$deltatime.'</td>';
    $output .= '<td>'.$Заказ->МенеджерЗаказа.'</td>';
    $output .= '<td>'.$Заказ->МенеджерКлиента.'</td>'.PHP_EOL;
    $output .= '<td>'.$Заказ->КаналПервичногоИнтереса.'</td>'.PHP_EOL;
    $output .= '</tr>';
    
// расчет зарплаты менеджера
// 3% если менеджер сам выполнил заказ своего клиента
// 2% если менеджер выполнил заказ не своего клиента
// 1% если кто-то выполнил заказ его клиента
    if (!array_key_exists($Заказ->МенеджерЗаказа,$Зарплата)) {
        $Зарплата[$Заказ->МенеджерЗаказа] = 0;
    }
    
    if (!array_key_exists($Заказ->МенеджерКлиента,$Зарплата)) {
        $Зарплата[$Заказ->МенеджерКлиента] = 0;
    }
    
    $Зарплата[$Заказ->МенеджерЗаказа] += 0.02 * $Заказ->СуммаДляУчета();
    $Зарплата[$Заказ->МенеджерКлиента] += 0.01 * $Заказ->СуммаДляУчета();
    
    $ordercount++;
}

$moneystring = '';
foreach ($Зарплата as $manager => $money) {
    $moneystring .= '<tr>';
    $moneystring .= '<td>'.$manager.'</td><td>'.$money.'</td>';
    $moneystring .= '</tr>';
}

$htmlout = '<h1>Отчет по заказам с '.$startdate.' по '.$stopdate.' включительно</h1>'.PHP_EOL;
$htmlout .= 'С 00:00 по 23:59<br>'.PHP_EOL;
$htmlout .= 'б = безналичная оплата<br>';
$htmlout .= 'н = наличная оплата<br>';
$htmlout .= 'в = взаимозачет задолженности<br>'.PHP_EOL;
$htmlout .= 'Всего заказов: '.$ordercount.'<br>'.PHP_EOL;
$htmlout .= '<table class="table table-hover">'.PHP_EOL;
$htmlout .= $output;
$htmlout .= '</table>'.PHP_EOL;
$htmlout .= '<hr>'.PHP_EOL;
$htmlout .= '<h2>Зарплата</h2>'.PHP_EOL;
$htmlout .= '<table class="table table-hover">'.PHP_EOL;
$htmlout .= $moneystring;
$htmlout .= '</table>'.PHP_EOL;
echo $htmlout;
